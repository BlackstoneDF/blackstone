# This file represents a frontend for the Blackstone language.
# It defines how certain DiamondFire code blocks are called.
# This will also be useful if there is an IDE extension for this
#
# Syntax requirements:
# <calling> = <block> <command> <arguments seen in item lore>
#
# So, this means that in: `PlayerAction.SendMessage = PlayerAction SendMessage Text(s)`
# PlayerAction.SendMessage is how you call the block from the language
# PlayerAction is the block you call.
# SendMessage is the action on the block.
# Text(s) is the argument. You can add another space after for another argument.
#
# Do note this syntax is not finalized.
# I wouldn't recommend adding to this until it's finalized.

#####################################
# PLAYER ACTIONS                    #
#####################################

PA::SendMessage = PlayerAction SendMessage Text(s)

#####################################
# ENTITY ACTIONS                    #
#####################################



#####################################
# GAME ACTIONS                      #
#####################################



#####################################
# SELECT OBJECTS                    #
#####################################



#####################################
# IF PLAYER                         #
#####################################




#####################################
# IF GAME                           #
#####################################



#####################################
# IF ENTITY                         #
#####################################



#####################################
# IF VARIABLE                       #
#####################################



#####################################
# CONTROL                           #
#####################################