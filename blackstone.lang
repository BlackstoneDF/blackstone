# This file represents a frontend for the Blackstone language.
# It defines how certain DiamondFire code blocks are called.
# This will also be useful if there is an IDE extension for this
#
# Syntax requirements:
# <calling> <- <block> <command> <arguments seen in item lore>
#
# In the calling section:
# #[Number] -> Number
# #[Text] -> Text
# #[Variable] -> A variable item
# #[Item] -> Any item, vanilla or ItemAPI
# #[Location] - A valid location
#
# Semicolons are not necessary, they are auto-handled by the compiler
#
# So, this means that in: `PlayerAction.SendMessage(#[Text(s)]) <- PlayerAction SendMessage`
# PlayerAction.SendMessage(#[Text(s)]) is how you call the block from the language
# #[Text(s)] will be filled in with a series of strings
# PlayerAction is the block you call.
# SendMessage is the action on the block.
#
#
# Do note this syntax is not finalized.
# I wouldn't recommend adding to this until it's finalized.


#####################################
# PLAYER ACTIONS                    #
#####################################

player.sendMessage(#[Text(s)]) <- PlayerAction SendMessage

#####################################
# ENTITY ACTIONS                    #
#####################################

entity.damage(#[Number]) <- EntityAction Damage

#####################################
# GAME ACTIONS                      #
#####################################

instance.setBlock(#[Item], #[Location]) <- GameAction SetBlock

#####################################
# SELECT OBJECTS                    #
#####################################



#####################################
# SET VARIABLE                      #
#####################################

var #[Variable]: #[Type] = #[Any] <- SetVariable =
var #[Variable] createList(#[Any(s)]) <- SetVariable CreateList

#####################################
# IF PLAYER                         #
#####################################



#####################################
# IF GAME                           #
#####################################



#####################################
# IF ENTITY                         #
#####################################



#####################################
# IF VARIABLE                       #
#####################################

if #[Any] = #[Any(s)] <- IfVariable
if #[Any] != #[Any(s)] <- IfVariable
if #[Number] > #[Number] <- IfVariable >
if #[Number] >= #[Number] <- IfVariable >=
if #[Number] < #[Number] <- IfVariable <
if #[Number] <= #[Number] <- IfVariable <=
if #[Any] in #[Any]..#[Any] <- IfVariable InRange 
if #[Location] isNear #[Location] <- IfVariable LocIsNear

#####################################
# CONTROL                           #
#####################################